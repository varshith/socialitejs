<?php
/**
* @file
* Socialite.js - integration with Drupal 7
*/

/**
* Implements hook_help.
*
* Displays help and module information.
*
* @param path
*   Which path of the site we're using to display help
* @param arg
*   Array that holds the current path as returned from arg() function
*/
function socialitejs_help($path, $arg) {
  switch ($path) {
    case "admin/help#socialitejs":
      return '<p>'.  t("Socialite.js - integration with Drupal 7") .'</p>';
      break;
  }
} 

/**
* Implements hook_menu().
*/
function socialitejs_menu() {
  $items = array();

  $items['admin/config/content/socialitejs'] = array(
    'title' => 'SocialiteJS',
    'description' => 'Socialite.js - integration with Drupal 7',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('socialitejs_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );  
  return $items;
}

/**
* Implements hook_preprocess_page.
*/
function socialitejs_preprocess_page(&$variables) {
  if(!empty($variables['node'])){
     drupal_add_js('misc/jquery.js');
	 drupal_add_js(drupal_get_path('module', 'socialitejs') . '/js/socialite.js');
	 drupal_add_js(drupal_get_path('module', 'socialitejs') . '/js/socialitejs.js');
  }
}

function socialitejs_preprocess_node(&$variables) {
  if(!empty($variables['node'])){
//$node = $variables['node'];
  // $sites = variable_get('socialitejs_sites', array('facebook', 'twitter'));	
		//kpr($sites);
	//  foreach ($sites as $site) {
    //      $node->content['body'][] = _socialitejs_link($site, $node);
     // }
	 // }
	  //$variables['node'] = array();
}

/**
 * Implements hook_node_view().
 */
function socialitejs_node_view($node, $view_mode, $language) {
  if ($view_mode == 'teaser' || ($view_mode == 'full')) {
	// $sites = variable_get('socialitejs_sites', array('facebook', 'twitter'));	
	//	kpr($sites);
//foreach ($sites as $site) {
     //     $node->content['body'][] = _socialitejs_link($site, $node);
     // }
	//  kpr($node);
	 // $node = '';
  }
}

function _socialitejs_link($site, $node) {
print 'hi '.$site;
global $base_url;
  // check for an alias on the node
  if (!isset($node->link)) {
    $row = db_query("SELECT alias FROM {url_alias} WHERE source = :src", array(':src' => 'node/'. $node->nid));
    $alias = $row->fetchColumn();
    $url = $base_url .'/'. ($alias ? $alias : 'node/'. $node->nid);
  }
  else {
    $url = $node->link;
  }

  // if the shorten_urls module is installed & enabled, shorten the url being shared.
  if (module_exists('shorten')) {
    $url = shorten_url($url);
  }
  $title = $node->title;
switch($site)
{
case 'facebook':
	return l(t('Facebook'),'http://www.facebook.com/sharer.php?u='.$url.'&amp;t='.$title, array('attributes' => array('class' => 'socialite facebook-like'), 'data-url' => $url));
case 'twitter':
	return l(t('Twitter'),'http://twitter.com/share' , array('attributes' => array('class' => 'socialite twitter-share'), 'data-url' => $url));
}
} 

/**
* Page callback: SocialiteJS settings
*
* @see socialitejs_menu()
*/
function socialitejs_form($form, &$form_state) {
  $form['widgets'] = array(
    '#type'          => 'checkboxes',
    '#title'         => t('Widgets'),
    '#description'   => t('Choose which websites you would like to enable a share link for.'),
    '#default_value' => variable_get('socialitejs_sites', array()),
    '#options'       => array(
      'facebook'     => t('Facebook'),
      'twitter'      => t('Twitter'),
    ),
  );
  return system_settings_form($form);
}